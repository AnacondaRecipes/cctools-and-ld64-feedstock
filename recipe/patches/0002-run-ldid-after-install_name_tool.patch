From fea8e31e4029cb1914042c1cf72db3f941928614 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Fri, 2 Oct 2020 16:02:19 -0500
Subject: [PATCH] Run ldid after install_name_tool

---
 cctools/misc/install_name_tool.c | 38 +++++++++++++++++++++++++++++++-
 1 file changed, 37 insertions(+), 1 deletion(-)

diff --git a/cctools/misc/install_name_tool.c b/cctools/misc/install_name_tool.c
index 34d063d..f4d34e1 100644
--- a/cctools/misc/install_name_tool.c
+++ b/cctools/misc/install_name_tool.c
@@ -31,6 +31,7 @@
 #include "stuff/rnd.h"
 #include "stuff/allocate.h"
 #include "stuff/write64.h"
+#include <sys/param.h>
 
 /* used by error routines as the name of the program */
 char *progname = NULL;
@@ -131,6 +132,9 @@ char **envp)
     uint32_t narchs;
     char *input;
     char *output;
+    char *ldidcommand;  // cctools-port
+    int isarm64, bufsize;        // cctools-port
+    char *p, *prefix, buf[MAXPATHLEN], resolved_name[PATH_MAX];  // cctools-port
 
 	output = NULL;
 	progname = argv[0];
@@ -312,11 +316,43 @@ char **envp)
 	if(errors)
 	    exit(EXIT_FAILURE);
 
+	isarm64 = 0;  /* cctools-port */
+	for (i = 0; i < narchs; i++) {
+	    if (archs[i].object->mh != NULL) {
+	        if (archs[i].object->mh->cputype == CPU_TYPE_ARM64) {
+	            isarm64 = 1;
+	        }
+	    } else {
+	        if (archs[i].object->mh64->cputype == CPU_TYPE_ARM64) {
+	            isarm64 = 1;
+	        }
+	    }
+	}  /* cctools-port */
+
 	if(output != NULL)
 	    writeout(archs, narchs, output, 0777, TRUE, FALSE, FALSE, FALSE,
 		     NULL);
-	else
+	else {
 	    write_on_input(archs, narchs, input);
+	    output = input;
+	}
+
+	if (isarm64 == 1) { /* cctools-port */
+	    bufsize = MAXPATHLEN;
+	    p = buf;
+	    i = _NSGetExecutablePath(p, &bufsize);
+	    if(i == -1){
+		p = allocate(bufsize);
+		_NSGetExecutablePath(p, &bufsize);
+	    }
+	    prefix = realpath(p, resolved_name);
+	    p = rindex(prefix, '/');
+	    if(p != NULL)
+		p[1] = '\0';
+	    ldidcommand = makestr(prefix, "ldid -S ", output, NULL);
+	    system(ldidcommand);
+	    free(ldidcommand);
+	} /* cctools-port */
 
 	if(errors)
 	    return(EXIT_FAILURE);
-- 
2.28.0

