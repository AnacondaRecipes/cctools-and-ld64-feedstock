diff --git a/cctools/include/stuff/diagnostics.h b/cctools/include/stuff/diagnostics.h
index 6b72ea1..4981595 100644
--- a/cctools/include/stuff/diagnostics.h
+++ b/cctools/include/stuff/diagnostics.h
@@ -60,4 +60,13 @@ void diagnostics_log_msg(enum diagnostic_level level, const char* message);
  */
 void diagnostics_write(void);
 
+#if defined(__APPLE__ ) && defined(__has_builtin)
+#  if __has_builtin(__builtin_available)
+#    define HAVE_OPENMEMSTREAM_RUNTIME __builtin_available(macOS 10.13, *)
+#  endif
+#endif
+#ifndef HAVE_OPENMEMSTREAM_RUNTIME
+#  define HAVE_OPENMEMSTREAM_RUNTIME 1
+#endif
+
 #endif /* diagnostics_h */
diff --git a/cctools/libstuff/diagnostics.c b/cctools/libstuff/diagnostics.c
index 6dafd31..e252797 100644
--- a/cctools/libstuff/diagnostics.c
+++ b/cctools/libstuff/diagnostics.c
@@ -103,6 +103,7 @@ void diagnostics_log_args(int argc, char** argv)
 	info.args = NULL;
     }
 
+    if (HAVE_OPENMEMSTREAM_RUNTIME) {  // cctools-port
     stream = open_memstream(&buf, &len);
     if (stream) {
 	for (int i = 1; i < argc; ++i) {
@@ -112,6 +113,7 @@ void diagnostics_log_args(int argc, char** argv)
 	info.args = strdup(buf);
 	free(buf);
     }
+    }  // cctools-port
 }
 
 void diagnostics_log_msg(enum diagnostic_level level, const char* message)
@@ -140,7 +142,10 @@ void diagnostics_write(void)
     /*
      * write XML data to a dynamic in-memory buffer.
      */
+    if (HAVE_OPENMEMSTREAM_RUNTIME) { // cctools-port
+    if (diagnostics_enabled())
     stream = open_memstream(&buf, &len);
+    } // cctools-port
     if (!stream)
 	return;
 
diff --git a/cctools/libstuff/errors.c b/cctools/libstuff/errors.c
index ed20b40..4bcb6b4 100644
--- a/cctools/libstuff/errors.c
+++ b/cctools/libstuff/errors.c
@@ -51,7 +51,8 @@ const char *format,
 	fprintf(stderr, "\n");
 	va_end(ap);
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -65,6 +66,7 @@ const char *format,
 		free(buf);
 	    }
 	}
+	}  // cctools-port
 }
 
 /*
@@ -86,7 +88,8 @@ const char *format,
 	va_end(ap);
 	errors++;
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -100,6 +103,7 @@ const char *format,
 		free(buf);
 	    }
 	}
+	}  // cctools-port
 }
 
 /*
@@ -124,7 +128,8 @@ const char *format,
 	va_end(ap);
 	errors++;
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -140,6 +145,7 @@ const char *format,
 		free(buf);
 	    }
 	}
+	}  // cctools-port
 }
 
 /*
@@ -162,7 +168,8 @@ const char *format,
 	va_end(ap);
 	errors++;
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -177,6 +184,7 @@ const char *format,
 		free(buf);
 	    }
 	}
+	}  // cctools-port
 }
 
 /*
@@ -198,7 +206,8 @@ char *format,
 	va_end(ap);
 	errors++;
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -213,5 +222,6 @@ char *format,
 		free(buf);
 	    }
 	}
+	}  // cctools-port
 }
 #endif /* !defined(RLD) */
diff --git a/cctools/libstuff/fatal_arch.c b/cctools/libstuff/fatal_arch.c
index 5bb035f..4368c5f 100644
--- a/cctools/libstuff/fatal_arch.c
+++ b/cctools/libstuff/fatal_arch.c
@@ -56,7 +56,8 @@ char *format,
 	else
 	    fprintf(stderr, "\n");
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -81,6 +82,7 @@ char *format,
 		free(buf);
 	    }
 	}
+       }    // cctools-port modification
 }
 
 /*
@@ -113,7 +115,8 @@ char *format,
 	va_end(ap);
 	errors++;
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -138,6 +141,7 @@ char *format,
 		free(buf);
 	    }
 	}
+       }    // cctools-port modification
 }
 
 /*
@@ -169,7 +173,8 @@ char *format,
 	    fprintf(stderr, "\n");
 	va_end(ap);
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -196,6 +201,7 @@ char *format,
 
 	    diagnostics_write();
 	}
+       }    // cctools-port modification
 
 	exit(EXIT_FAILURE);
 }
diff --git a/cctools/libstuff/fatals.c b/cctools/libstuff/fatals.c
index e5f0dd7..9b6b482 100644
--- a/cctools/libstuff/fatals.c
+++ b/cctools/libstuff/fatals.c
@@ -49,7 +49,8 @@ const char *format,
         fprintf(stderr, "\n");
 	va_end(ap);
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -65,6 +66,7 @@ const char *format,
 
 	    diagnostics_write();
 	}
+       } // cctools-port modification
 
 	exit(1);
 }
@@ -86,7 +88,8 @@ const char *format,
 	fprintf(stderr, " (%s)\n", strerror(errno));
 	va_end(ap);
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -103,6 +106,7 @@ const char *format,
 
 	    diagnostics_write();
 	}
+       } // cctools-port modification
 
 	exit(1);
 }
@@ -125,7 +129,8 @@ char *format,
 	fprintf(stderr, " (%s)\n", mach_error_string(r));
 	va_end(ap);
 
-	if (diagnostics_enabled()) {
+       if (HAVE_OPENMEMSTREAM_RUNTIME) {    // cctools-port modification
+       if (diagnostics_enabled()) {
 	    char* buf;
 	    size_t len;
 
@@ -142,6 +147,7 @@ char *format,
 
 	    diagnostics_write();
 	}
+       } // cctools-port modification
 
 	exit(1);
 }
