From 0a2270ff6adaab8dd47a8c8e5e5dd16f19a38cf1 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Fri, 2 Oct 2020 17:03:07 -0500
Subject: [PATCH] codesign after linker is done

---
 cctools/ld64/src/ld/ld.cpp | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/cctools/ld64/src/ld/ld.cpp b/cctools/ld64/src/ld/ld.cpp
index 05ff299..cf4bb78 100644
--- a/cctools/ld64/src/ld/ld.cpp
+++ b/cctools/ld64/src/ld/ld.cpp
@@ -1434,8 +1434,20 @@ int main(int argc, const char* argv[])
 			fprintf(stderr, "processed %3u dylib files\n", inputFiles._totalDylibsLoaded);
 			fprintf(stderr, "wrote output file            totaling %15s bytes\n", commatize(out.fileSize(), temp));
 		}
-		if ( getenv("IOS_SIGN_CODE_WHEN_BUILD") || getenv("IOS_FAKE_CODE_SIGN") ) { // ld64-port   (keep IOS_SIGN_CODE_WHEN_BUILD for compatibility with the 'iOS toolchain based on clang for linux' project)
-			std::string ldid = std::string("ldid -S ") + std::string(options.outputFilePath());
+		if ( getenv("IOS_SIGN_CODE_WHEN_BUILD") || getenv("IOS_FAKE_CODE_SIGN") || strcmp(archName, "arm64") == 0) { // ld64-port   (keep IOS_SIGN_CODE_WHEN_BUILD for compatibility with the 'iOS toolchain based on clang for linux' project)
+			unsigned bufsize = MAXPATHLEN;
+			char *p, *prefix, buf[MAXPATHLEN], resolved_name[PATH_MAX];
+			p = buf;
+			int i = _NSGetExecutablePath(p, &bufsize);
+			if(i == -1){
+				p = new char[bufsize];
+				_NSGetExecutablePath(p, &bufsize);
+			}
+			prefix = realpath(p, resolved_name);
+			p = rindex(prefix, '/');
+			if(p != NULL)
+				p[1] = '\0';
+			std::string ldid = std::string(prefix) + std::string("ldid -S ") + std::string(options.outputFilePath());
 			system(ldid.c_str());
 		}
 		// <rdar://problem/6780050> Would like linker warning to be build error.
-- 
2.28.0

